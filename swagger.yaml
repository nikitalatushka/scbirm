openapi: 3.0.0
info:
  title: SCBIRM Resources API
  description: |-
    This API uses a REST based design, leverages JSON data format, and relies upon HTTPS for transport. Express.js is used as the back end up application framework for building this RESTful API with Node.js. Swagger is used for documentation and design. It provides endpoints to a MariaDB instance that has information about resources in the Sim City Build It game. 
  version: 1.0.0
servers:
  - url: https://scbirm.servme.cc/resources/v1
paths:
  /products:
    get:
      tags:
        - products
      summary: List of all products
      description: Returns an array of products. 
      parameters:
      - name: product_name
        in: query
        description: Search by name of the product.
        required: false
        schema:
          type: string
      - name: product_id
        in: query
        description: Search by ID of the product. 
        required: false
        schema:
          type: string
      - name: store_id
        in: query
        description: Search products manufactured at a particular store ID.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'  
  /products/{id}:
    get:
      tags:
      - products
      summary: Single product
      description: Returns a product object. 
      parameters:
      - name: id
        in: path
        description: product_id
        required: true        
        schema: 
          type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product' 
  /products/{id}/recipe:
    get:
      tags:
      - products
      summary: Product recipe
      description: Returns an array of ingredients used to manufacture this product.
      parameters:
      - name: id
        in: path
        description: product_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Ingredients' 
  /materials:
    get:
      tags:
      - materials
      summary: List of all materials
      description: Returns an array of materials.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material' 
  /materials/{id}:
    get:
      tags:
      - materials
      summary: Single material
      description: Single material
      parameters:
      - name: id
        in: path
        description: material_id
        required: true        
        schema: 
          type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material' 
  /materials/{id}/recipe:
    get:
      tags:
      - materials
      summary: Products made with material
      description: Products made with material
      parameters:
      - name: id
        in: path
        description: materials_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredients' 
  /stores:
    get:
      tags:
      - stores
      summary: List all stores
      description: Returns an array of stores. 
      responses:
        '200':
          description: Successful operation
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Store'
  /stores/{id}/products:
    get:
      tags:
      - stores
      summary: List of products produced by store
      description: List of products produced by store
      parameters:
      - name: id
        in: path
        description: store_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful operation
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Product'
components:
  schemas:
    Store:
      type: object
      properties:
        store_id:
          type: integer
          example: 3001
        store_name:
          type: string
          example: Building Supplies Store
        store_description:
          type: string
          example: Provides building materials and supplies for Sims.
        store_level:
          type: integer
          example: 1
    Ingredient:
      type: object
      properties:
        product_id: 
          type: integer
          example: 2001
        product_name: 
          type: string
          example: Nail
        material_id:
          type: integer
          example: 1001
        material_name: 
          type: string
          example: Metal
        subassembly_id:
          type: integer
          example: null
        subassembly_name: 
          type: string
          example: null
        count: 
          type: integer
          example: 1
    Product:
      type: object
      properties:
        product_id:
          type: integer
          example: 2001
        product_name:
          type: string 
          example: Nail
        time:
          type: integer
          format: minutes
          example: 5
        value:
          type: integer
          format: simeloneons
          example: 80
        level:
          type: integer
          example: 1
        store_id:
          type: integer
          example: 3001
        store_name:
          type: string
          example: Building Supplies Store
    Material:
      type: object
      properties:
        material_id:
          type: integer
          example: 1001
        material_name:
          type: string 
          example: Metal
        time:
          type: integer
          format: minutes
          example: 1
        value:
          type: integer
          format: simeloneons
          example: 10
        level:
          type: integer
          example: 1
        store_id:
          type: integer
          example: 3021
        store_name:
          type: string
          example: Factory
